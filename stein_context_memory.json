[
  {
    "original": "코드 수정해줘",
    "enhanced": "코드 리뷰하면서 개선점을 찾아보자. 성능, 가독성, 보안, 테스트 커버리지를 모두 고려해서 최적화해줘.",
    "prompt_type": "CODE_REVIEW",
    "effectiveness_score": 10,
    "auto_actions": [
      "코드 품질 분석 및 메트릭 수집",
      "보안 취약점 검사 실행",
      "성능 프로파일링 수행",
      "테스트 커버리지 확인",
      "개선사항 자동 적용",
      "최종 검증 및 문서화"
    ],
    "recommendations": [
      "코드 품질 메트릭 분석 추가",
      "보안 취약점 검사 포함",
      "성능 벤치마크 테스트 추가"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.040550"
  },
  {
    "original": "버그 수정",
    "enhanced": "이 에러를 함께 분석해보자. 원인을 찾고 방어 코드도 추가해서 비슷한 문제가 재발하지 않도록 해줘.",
    "prompt_type": "BUG_FIXING",
    "effectiveness_score": 10,
    "auto_actions": [
      "에러 로그 분석 및 원인 파악",
      "디버깅 및 문제점 식별",
      "방어 코드 및 예외 처리 추가",
      "단위 테스트 작성 및 실행",
      "로깅 시스템 강화",
      "모니터링 설정 추가"
    ],
    "recommendations": [
      "로깅 시스템 강화",
      "모니터링 대시보드 추가",
      "자동화된 에러 리포트 생성"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.041837"
  },
  {
    "original": "기능 추가",
    "enhanced": "이 기능을 TDD 방식으로 구현해줘. 먼저 테스트를 작성하고, 그 다음 구현하고, 마지막에 통합 테스트도 추가해줘.",
    "prompt_type": "CODE_GENERATION",
    "effectiveness_score": 9,
    "auto_actions": [
      "요구사항 분석 및 설계",
      "테스트 코드 먼저 작성 (TDD)",
      "기능 구현 및 최적화",
      "통합 테스트 및 검증",
      "문서화 및 API 스펙 생성",
      "배포 준비 및 컨테이너화"
    ],
    "recommendations": [
      "API 문서 자동 생성",
      "컨테이너화 설정 추가",
      "CI/CD 파이프라인 구성"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.043067"
  },
  {
    "original": "최적화",
    "enhanced": "성능 프로파일링을 해보고 병목 지점을 찾아서 최적화해줘. 메모리 사용량과 실행 시간을 모두 고려해줘.",
    "prompt_type": "OPTIMIZATION",
    "effectiveness_score": 9,
    "auto_actions": [
      "성능 프로파일링 실행",
      "병목 지점 식별 및 분석",
      "알고리즘 최적화 적용",
      "메모리 사용량 최적화",
      "벤치마크 테스트 실행",
      "성능 모니터링 설정"
    ],
    "recommendations": [
      "메모리 사용량 모니터링",
      "캐싱 전략 적용",
      "데이터베이스 쿼리 최적화"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.044295"
  },
  {
    "original": "테스트",
    "enhanced": "단위 테스트, 통합 테스트, E2E 테스트를 모두 작성해줘. 테스트 커버리지 90% 이상을 목표로 해줘.",
    "prompt_type": "TEST_DRIVEN",
    "effectiveness_score": 10,
    "auto_actions": [
      "테스트 전략 수립",
      "단위 테스트 작성",
      "통합 테스트 작성",
      "E2E 테스트 작성",
      "테스트 커버리지 측정",
      "테스트 자동화 설정"
    ],
    "recommendations": [
      "테스트 커버리지 리포트 생성",
      "자동화된 테스트 실행",
      "테스트 데이터 관리 시스템"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.045768"
  },
  {
    "original": "문서화",
    "enhanced": "코드에 상세한 주석을 추가하고, README와 API 문서도 작성해줘. 한국어로 명확하게 설명해줘.",
    "prompt_type": "DOCUMENTATION",
    "effectiveness_score": 8,
    "auto_actions": [
      "코드 주석 분석 및 개선",
      "README 문서 작성",
      "API 문서 생성",
      "아키텍처 문서 작성",
      "사용자 가이드 작성",
      "설치 가이드 작성"
    ],
    "recommendations": [
      "아키텍처 다이어그램 생성",
      "API 스펙 문서화",
      "사용자 가이드 작성"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.047104"
  },
  {
    "original": "구조 개선",
    "enhanced": "클린 아키텍처 원칙에 따라 시스템을 설계하고, 의존성 주입과 SOLID 원칙을 적용해줘.",
    "prompt_type": "ARCHITECTURE",
    "effectiveness_score": 9,
    "auto_actions": [
      "시스템 요구사항 분석",
      "아키텍처 패턴 선택",
      "모듈 설계 및 분리",
      "의존성 주입 설정",
      "데이터베이스 설계",
      "API 설계 및 문서화"
    ],
    "recommendations": [
      "마이크로서비스 분리",
      "로드 밸런싱 설정",
      "데이터베이스 샤딩 전략"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.049640"
  },
  {
    "original": "보안 강화",
    "enhanced": "보안 취약점을 분석하고, 인증/인가 시스템을 강화해줘. OWASP Top 10을 고려해서 보안을 강화해줘.",
    "prompt_type": "SECURITY",
    "effectiveness_score": 10,
    "auto_actions": [
      "보안 취약점 분석",
      "인증 시스템 강화",
      "권한 관리 시스템 구현",
      "데이터 암호화 적용",
      "보안 테스트 작성",
      "보안 모니터링 설정"
    ],
    "recommendations": [
      "보안 스캔 자동화",
      "취약점 모니터링",
      "보안 정책 문서화"
    ],
    "context_info": {
      "language_hints": [],
      "technology_hints": [],
      "complexity_level": "medium",
      "urgency_level": "normal"
    },
    "timestamp": "2025-07-15T14:01:19.050242"
  }
]